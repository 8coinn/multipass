// Copyright Â© 2017 Canonical Ltd.
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 3 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.
//
// Authored by: Alberto Aguirre <alberto.aguirre@canonical.com>

syntax = "proto3";
package multipass;

service Rpc {
    rpc create (CreateRequest) returns (stream CreateReply);
    rpc empty_trash (EmptyTrashRequest) returns (EmptyTrashReply);
    rpc exec (ExecRequest) returns (ExecReply);
    rpc info (InfoRequest) returns (InfoReply);
    rpc list (ListRequest) returns (ListReply);
    rpc recover (RecoverRequest) returns (RecoverReply);
    rpc start (StartRequest) returns (StartReply);
    rpc stop (StopRequest) returns (StopReply);
    rpc trash (TrashRequest) returns (TrashReply);
    rpc version (VersionRequest) returns (VersionReply);
}

message CreateRequest {
    string instance_name = 1;
    string image = 2;
    string kernel_name = 3;
    int32 num_cores = 4;
    string mem_size = 5; // units?
    int32 disk_space = 6; // units?
    //string cloud_init_config_path = 7;
}

message CreateReply {
    oneof create_oneof {
        string vm_instance_name = 1;
        string download_progress = 2;
        string create_complete = 3;
    }
}

message EmptyTrashRequest {
}

message EmptyTrashReply {
}

message ExecRequest {
    string instance_name = 1;
    string command_line = 2;
}

message ExecReply {
    string exec_line = 1;
}

message InfoRequest {
    string instance_name = 1;
}

message InfoReply {
    string name = 1;
    enum Status {
        RUNNING = 0;
        STOPPED = 1;
        TRASHED = 2;
    }
    Status status = 2;
    string release = 3;
    string id = 4;
    float load = 5;
    int32 memory_usage = 6;
    int32 disk_usage = 7;
    string ipv4 = 8;
    string ipv6 = 9;
}

message ListRequest {
}

message ListVMInstance {
    string name = 1;
    enum Status {
        RUNNING = 0;
        STOPPED = 1;
        TRASHED = 2;
    }
    Status status = 2;
    string ipv4 = 3;
    string ipv6 = 4;
}

message ListReply {
    repeated ListVMInstance instances = 1;
}

message RecoverRequest {
    string instance_name = 1;
}

message RecoverReply {
}

message StartRequest {
    string instance_name = 1;
}

message StartReply {
}

message StopRequest {
    string instance_name = 1;
}

message StopReply {
}

message TrashRequest {
    string instance_name = 1;
    bool force = 2;
}

message TrashReply {
}

message VersionRequest {
}

message VersionReply {
    string version = 1;
}
